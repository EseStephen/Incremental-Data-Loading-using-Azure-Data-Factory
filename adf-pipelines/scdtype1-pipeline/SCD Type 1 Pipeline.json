{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"factoryName":{"type":"string","metadata":"Data Factory name"},"AzureBlobStorage":{"type":"string"},"AzureSqlSalesDatabase":{"type":"string"}},"variables":{"factoryId":"[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"},"resources":[{"name":"[concat(parameters('factoryName'), '/SCD Type 1 Pipeline')]","type":"Microsoft.DataFactory/factories/pipelines","apiVersion":"2018-06-01","properties":{"activities":[{"name":"Data flow","type":"ExecuteDataFlow","dependsOn":[],"policy":{"timeout":"0.12:00:00","retry":0,"retryIntervalInSeconds":30,"secureOutput":false,"secureInput":false},"userProperties":[],"typeProperties":{"dataflow":{"referenceName":"scd1dataflow","type":"DataFlowReference","parameters":{},"datasetParameters":{"EmployeesUpdated":{},"ExistingEmployees":{},"sink":{},"sink2":{}}},"staging":{},"compute":{"coreCount":8,"computeType":"General"},"traceLevel":"Fine"}}],"policy":{"elapsedTimeMetric":{}},"annotations":[]},"dependsOn":["[concat(variables('factoryId'), '/dataflows/scd1dataflow')]"]},{"name":"[concat(parameters('factoryName'), '/scd1dataflow')]","type":"Microsoft.DataFactory/factories/dataflows","apiVersion":"2018-06-01","properties":{"type":"MappingDataFlow","typeProperties":{"sources":[{"dataset":{"referenceName":"employee2source","type":"DatasetReference"},"name":"EmployeesUpdated"},{"dataset":{"referenceName":"AzureSqlTableEmployee","type":"DatasetReference"},"name":"ExistingEmployees"}],"sinks":[{"dataset":{"referenceName":"AzureSqlTableEmployee","type":"DatasetReference"},"name":"sink"},{"dataset":{"referenceName":"AzureSqlTableEmployee","type":"DatasetReference"},"name":"sink2"}],"transformations":[{"name":"join"},{"name":"derivedColumn"},{"name":"filter1"},{"name":"select"},{"name":"filter2"},{"name":"alterRow1"},{"name":"alterRow2"},{"name":"select1"}],"scriptLines":["source(output(","          EmployeeID as integer,","          Name as string,","          Salary as integer,","          Location as string","     ),","     allowSchemaDrift: true,","     validateSchema: false,","     ignoreNoFilesFound: false) ~> EmployeesUpdated","source(output(","          EmployeeID as integer,","          Name as string,","          Salary as decimal(10,2),","          Location as string","     ),","     allowSchemaDrift: true,","     validateSchema: false,","     isolationLevel: 'READ_UNCOMMITTED',","     format: 'table') ~> ExistingEmployees","EmployeesUpdated, ExistingEmployees join(EmployeesUpdated@EmployeeID == ExistingEmployees@EmployeeID,","     joinType:'left',","     matchType:'exact',","     ignoreSpaces: false,","     broadcast: 'auto')~> join","join derive(IsUpdated = iif(EmployeesUpdated@Salary != ExistingEmployees@Salary, 1, 0),","          IsNew = iif(isNull(ExistingEmployees@EmployeeID), 1, 0)\r",") ~> derivedColumn","derivedColumn filter(IsUpdated == 1) ~> filter1","alterRow1 select(mapColumn(","          EmployeeID = EmployeesUpdated@EmployeeID,","          Name = EmployeesUpdated@Name,","          Salary = EmployeesUpdated@Salary,","          Location = EmployeesUpdated@Location","     ),","     skipDuplicateMapInputs: true,","     skipDuplicateMapOutputs: true) ~> select","derivedColumn filter(IsNew == 1) ~> filter2","filter1 alterRow(updateIf(IsUpdated == 1)) ~> alterRow1","filter2 alterRow(insertIf(IsNew == 1)) ~> alterRow2","alterRow2 select(mapColumn(","          EmployeeID = EmployeesUpdated@EmployeeID,","          Name = EmployeesUpdated@Name,","          Salary = EmployeesUpdated@Salary,","          Location = EmployeesUpdated@Location","     ),","     skipDuplicateMapInputs: true,","     skipDuplicateMapOutputs: true) ~> select1","select sink(allowSchemaDrift: true,","     validateSchema: false,","     input(","          EmployeeID as integer,","          Name as string,","          Salary as decimal(10,2),","          Location as string","     ),","     deletable:false,","     insertable:false,","     updateable:true,","     upsertable:false,","     keys:['EmployeeID'],","     format: 'table',","     skipDuplicateMapInputs: true,","     skipDuplicateMapOutputs: true,","     errorHandlingOption: 'stopOnFirstError',","     mapColumn(","          EmployeeID,","          Name,","          Salary,","          Location","     )) ~> sink","select1 sink(allowSchemaDrift: true,","     validateSchema: false,","     input(","          EmployeeID as integer,","          Name as string,","          Salary as decimal(10,2),","          Location as string","     ),","     deletable:false,","     insertable:true,","     updateable:false,","     upsertable:false,","     format: 'table',","     skipDuplicateMapInputs: true,","     skipDuplicateMapOutputs: true,","     errorHandlingOption: 'stopOnFirstError') ~> sink2"]}},"dependsOn":["[concat(variables('factoryId'), '/datasets/employee2source')]","[concat(variables('factoryId'), '/datasets/AzureSqlTableEmployee')]"]},{"name":"[concat(parameters('factoryName'), '/employee2source')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('AzureBlobStorage')]","type":"LinkedServiceReference"},"annotations":[],"type":"DelimitedText","typeProperties":{"location":{"type":"AzureBlobStorageLocation","fileName":"employees_updated.csv","container":"employee"},"columnDelimiter":",","escapeChar":"\\","firstRowAsHeader":true,"quoteChar":"\""},"schema":[{"name":"EmployeeID","type":"String"},{"name":"Name","type":"String"},{"name":"Salary","type":"String"},{"name":"Location","type":"String"}]},"dependsOn":[]},{"name":"[concat(parameters('factoryName'), '/AzureSqlTableEmployee')]","type":"Microsoft.DataFactory/factories/datasets","apiVersion":"2018-06-01","properties":{"linkedServiceName":{"referenceName":"[parameters('AzureSqlSalesDatabase')]","type":"LinkedServiceReference"},"annotations":[],"type":"AzureSqlTable","schema":[{"name":"EmployeeID","type":"int","precision":10},{"name":"Name","type":"nvarchar"},{"name":"Salary","type":"decimal","precision":10,"scale":2},{"name":"Location","type":"nvarchar"}],"typeProperties":{"schema":"dbo","table":"Employees"}},"dependsOn":[]}]}